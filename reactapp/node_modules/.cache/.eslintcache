[{"/home/node/app/src/index.js":"1","/home/node/app/src/App.js":"2","/home/node/app/src/reportWebVitals.js":"3"},{"size":535,"mtime":1650627136000,"results":"4","hashOfConfig":"5"},{"size":4986,"mtime":1651679202278,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1650627136000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lfelkt",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/node/app/src/index.js",[],[],"/home/node/app/src/App.js",["18"],[],"import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart } from \"react-google-charts\";\nimport './App.css';\n\nexport const options = {\n  title: \"Voltajes\",\n  is3D: true,\n  slices: [{color: 'black'}, {}, {}, {color: 'red'}]\n};\n\nfunction App() {\n  const [corrienteData, setCorrienteData] = React.useState([\n    [\n      \"Corrientes\",\n      \"voltaje\",\n      { role: \"style\" },\n    ]\n  ]);\n  const [dataTensiones, setDataTensiones] = React.useState([\n    [\"Tensiones\", \"valores\"],\n  ]);\n  const [dataEnergias, setDataEnergias] = React.useState([\n    [\"Resto del promedio de energias\", \"Energia_Activa\", \"Energia_Aparente\", \"Energia_Reactiva\"],\n  ]);\n  const [dataPotencias, setDataPotencias] = React.useState([\n    [\"Potencias\", \"Activa\", \"Aparente\", \"Reactiva\"],\n  ]);\n  const [dataPotenciaTotal, setDataPotenciaTotal] = React.useState([\n    [\"Valor\", \"Factor de potencia total\"],\n  ]);\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/data/all')\n    .then(res => {\n\n      // Variables\n      let Corriente_L1 = 0\n      let Corriente_L2 = 0\n      let Corriente_L3 = 0\n      let Tension_L1_N = 0\n      let Tension_L2_N = 0\n      let Tension_L3_N = 0\n      let Energia_Activa = 0\n      let Energia_Aparente = 0\n      let Energia_Reactiva = 0\n      let potencias = []\n      let potenciaTotal = []\n\n      // Ciclo For\n      for (let i = 0; i < res.data.length; i++) {\n        Corriente_L1 += res.data[i].Corriente_L1\n        Corriente_L2 += res.data[i].Corriente_L2\n        Corriente_L3 += res.data[i].Corriente_L3\n        Tension_L1_N += res.data[i].Tension_L1_N\n        Tension_L2_N += res.data[i].Tension_L2_N\n        Tension_L3_N += res.data[i].Tension_L3_N\n        Energia_Activa += res.data[i].Energia_Activa\n        Energia_Aparente += res.data[i].Energia_Aparente\n        Energia_Reactiva += res.data[i].Energia_Reactiva\n        if(i < 50) {\n          potencias.push([i, res.data[i].Potencia_Activa_Total_P, res.data[i].Potencia_Aparente_Total_S, res.data[i].Potencia_Reactiva_Total_Q])\n          potenciaTotal.push([i, res.data[i].Factor_de_Potencia_Total])\n        }\n      }\n\n      // Corrientes\n      Corriente_L1 = Corriente_L1 / res.data.length\n      Corriente_L2 = Corriente_L2 / res.data.length\n      Corriente_L3 = Corriente_L3 / res.data.length\n      setCorrienteData([...corrienteData, [\"Corriente_L1\", Corriente_L1, 'red'], [\"Corriente_L2\", Corriente_L2, 'black'], [\"Corriente_L3\", Corriente_L3, 'blue']])\n\n      // Tensiones\n      Tension_L1_N = Tension_L1_N / res.data.length\n      Tension_L2_N = Tension_L2_N / res.data.length\n      Tension_L3_N = Tension_L3_N / res.data.length\n      setDataTensiones([...dataTensiones, ['Tension_L1_N', Tension_L1_N], ['Tension_L2_N', Tension_L2_N], ['Tension_L3_N', Tension_L3_N]])\n\n      // Energias\n      Energia_Activa = Energia_Activa % res.data.length\n      Energia_Aparente = Energia_Aparente % res.data.length\n      Energia_Reactiva = Energia_Reactiva % res.data.length\n      setDataEnergias([...dataEnergias, [\"Energias\", Energia_Activa, Energia_Aparente, Energia_Reactiva]])\n\n      // Potencias\n      setDataPotencias([...dataPotencias, ...potencias])\n      setDataPotenciaTotal([...dataPotenciaTotal, ...potenciaTotal])\n    })\n  }, []);\n\n  return (\n    <div className=\"dashboards\">\n      <div className='dashBoard'>\n        <Chart\n          chartType=\"BarChart\"\n          data={corrienteData}\n          options={{\n            title: \"Voltajes\",\n          }}\n          width={\"100%\"}\n          height={\"250px\"}\n        />\n      </div>\n      <div className='dashBoard'>\n        <Chart\n          chartType=\"PieChart\"\n          data={dataTensiones}\n          options={{\n            title: \"Tensiones\",\n            is3D: true,\n            slices: [{color: 'black'}, {color: 'green'}, {color: 'violet'}]\n          }}\n          width={\"100%\"}\n          height={\"250px\"}\n          columns={[]}\n        />\n      </div>\n      <div className='dashBoard'>\n        <Chart\n          chartType=\"Bar\"\n          data={dataEnergias}\n          options={{\n            title: \"Energias\",\n            is3D: false,\n\n          }}\n          width={\"100%\"}\n          height={\"250px\"}\n          columns={[]}\n        />\n      </div>\n      <div className='dashBoard'>\n        <Chart\n          chartType=\"LineChart\"\n          data={dataPotencias}\n          options={{\n            title: \"Potencias\",\n            is3D: false,\n\n          }}\n          width={\"100%\"}\n          height={\"250px\"}\n          columns={[]}\n        />\n      </div>\n      <div className='dashboardLarge'>\n        <Chart\n          chartType=\"AreaChart\"\n          width=\"100%\"\n          height=\"400px\"\n          data={dataPotenciaTotal}\n          options={{\n            title: \"Factor de potencia total\",\n            hAxis: { title: \"EvoluciÃ³n de la potencia\", titleTextStyle: { color: \"#333\" } },\n            vAxis: { minValue: 0 },\n            chartArea: { height: \"50%\" },\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/node/app/src/reportWebVitals.js",[],[],{"ruleId":"19","severity":1,"message":"20","line":89,"column":6,"nodeType":"21","endLine":89,"endColumn":8,"suggestions":"22"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'corrienteData', 'dataEnergias', 'dataPotenciaTotal', 'dataPotencias', and 'dataTensiones'. Either include them or remove the dependency array. You can also do a functional update 'setCorrienteData(c => ...)' if you only need 'corrienteData' in the 'setCorrienteData' call.","ArrayExpression",["23"],{"desc":"24","fix":"25"},"Update the dependencies array to be: [corrienteData, dataEnergias, dataPotenciaTotal, dataPotencias, dataTensiones]",{"range":"26","text":"27"},[3225,3227],"[corrienteData, dataEnergias, dataPotenciaTotal, dataPotencias, dataTensiones]"]