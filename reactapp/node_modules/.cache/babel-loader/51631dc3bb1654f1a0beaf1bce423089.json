{"ast":null,"code":"var _jsxFileName = \"/home/node/app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart } from \"react-google-charts\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const options = {\n  title: \"Voltajes\",\n  is3D: true,\n  slices: [{\n    color: 'black'\n  }, {}, {}, {\n    color: 'red'\n  }]\n};\n\nfunction App() {\n  _s();\n\n  const [corrienteData, setCorrienteData] = React.useState([[\"Corrientes\", \"voltaje\", {\n    role: \"style\"\n  }]]);\n  const [dataTensiones, setDataTensiones] = React.useState([[\"Tensiones\", \"valores\"]]);\n  const [dataEnergias, setDataEnergias] = React.useState([[\"Resto del promedio de energias\", \"Energia_Activa\", \"Energia_Aparente\", \"Energia_Reactiva\"]]);\n  const [dataPotencias, setDataPotencias] = React.useState([[\"Potencias\", \"Activa\", \"Aparente\", \"Reactiva\"]]);\n  const [dataPotenciaTotal, setDataPotenciaTotal] = React.useState([[\"Valor\", \"Factor de potencia total\"]]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/data/all').then(res => {\n      // Variables\n      let Corriente_L1 = 0;\n      let Corriente_L2 = 0;\n      let Corriente_L3 = 0;\n      let Tension_L1_N = 0;\n      let Tension_L2_N = 0;\n      let Tension_L3_N = 0;\n      let Energia_Activa = 0;\n      let Energia_Aparente = 0;\n      let Energia_Reactiva = 0;\n      let potencias = [];\n      let potenciaTotal = []; // Ciclo For\n\n      for (let i = 0; i < res.data.length; i++) {\n        Corriente_L1 += res.data[i].Corriente_L1;\n        Corriente_L2 += res.data[i].Corriente_L2;\n        Corriente_L3 += res.data[i].Corriente_L3;\n        Tension_L1_N += res.data[i].Tension_L1_N;\n        Tension_L2_N += res.data[i].Tension_L2_N;\n        Tension_L3_N += res.data[i].Tension_L3_N;\n        Energia_Activa += res.data[i].Energia_Activa;\n        Energia_Aparente += res.data[i].Energia_Aparente;\n        Energia_Reactiva += res.data[i].Energia_Reactiva;\n\n        if (i < 50) {\n          potencias.push([i, res.data[i].Potencia_Activa_Total_P, res.data[i].Potencia_Aparente_Total_S, res.data[i].Potencia_Reactiva_Total_Q]);\n          potenciaTotal.push([i, res.data[i].Factor_de_Potencia_Total]);\n        }\n      } // Corrientes\n\n\n      Corriente_L1 = Corriente_L1 / res.data.length;\n      Corriente_L2 = Corriente_L2 / res.data.length;\n      Corriente_L3 = Corriente_L3 / res.data.length;\n      setCorrienteData([...corrienteData, [\"Corriente_L1\", Corriente_L1, 'red'], [\"Corriente_L2\", Corriente_L2, 'black'], [\"Corriente_L3\", Corriente_L3, 'blue']]); // Tensiones\n\n      Tension_L1_N = Tension_L1_N / res.data.length;\n      Tension_L2_N = Tension_L2_N / res.data.length;\n      Tension_L3_N = Tension_L3_N / res.data.length;\n      setDataTensiones([...dataTensiones, ['Tension_L1_N', Tension_L1_N], ['Tension_L2_N', Tension_L2_N], ['Tension_L3_N', Tension_L3_N]]); // Energias\n\n      Energia_Activa = Energia_Activa % res.data.length;\n      Energia_Aparente = Energia_Aparente % res.data.length;\n      Energia_Reactiva = Energia_Reactiva % res.data.length;\n      setDataEnergias([...dataEnergias, [\"Energias\", Energia_Activa, Energia_Aparente, Energia_Reactiva]]); // Potencias\n\n      setDataPotencias([...dataPotencias, ...potencias]);\n      setDataPotenciaTotal([...dataPotenciaTotal, ...potenciaTotal]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboards\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashBoard\",\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        chartType: \"BarChart\",\n        data: corrienteData,\n        options: {\n          title: \"Voltajes\"\n        },\n        width: \"100%\",\n        height: \"250px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashBoard\",\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        chartType: \"PieChart\",\n        data: dataTensiones,\n        options: {\n          title: \"Tensiones\",\n          is3D: true,\n          slices: [{\n            color: 'black'\n          }, {\n            color: 'green'\n          }, {\n            color: 'violet'\n          }]\n        },\n        width: \"100%\",\n        height: \"250px\",\n        columns: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashBoard\",\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        chartType: \"Bar\",\n        data: dataEnergias,\n        options: {\n          title: \"Energias\",\n          is3D: false\n        },\n        width: \"100%\",\n        height: \"250px\",\n        columns: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashBoard\",\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        chartType: \"LineChart\",\n        data: dataPotencias,\n        options: {\n          title: \"Potencias\",\n          is3D: false\n        },\n        width: \"100%\",\n        height: \"250px\",\n        columns: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboardLarge\",\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        chartType: \"AreaChart\",\n        width: \"100%\",\n        height: \"400px\",\n        data: dataPotenciaTotal,\n        options: {\n          title: \"Factor de potencia total\",\n          hAxis: {\n            title: \"EvoluciÃ³n de la potencia\",\n            titleTextStyle: {\n              color: \"#333\"\n            }\n          },\n          vAxis: {\n            minValue: 0\n          },\n          chartArea: {\n            height: \"50%\"\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"kI3madoAv+qxwjO8wvVABCmhBtg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/node/app/src/App.js"],"names":["React","useEffect","axios","Chart","options","title","is3D","slices","color","App","corrienteData","setCorrienteData","useState","role","dataTensiones","setDataTensiones","dataEnergias","setDataEnergias","dataPotencias","setDataPotencias","dataPotenciaTotal","setDataPotenciaTotal","get","then","res","Corriente_L1","Corriente_L2","Corriente_L3","Tension_L1_N","Tension_L2_N","Tension_L3_N","Energia_Activa","Energia_Aparente","Energia_Reactiva","potencias","potenciaTotal","i","data","length","push","Potencia_Activa_Total_P","Potencia_Aparente_Total_S","Potencia_Reactiva_Total_Q","Factor_de_Potencia_Total","hAxis","titleTextStyle","vAxis","minValue","chartArea","height"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart } from \"react-google-charts\";\nimport './App.css';\n\nexport const options = {\n  title: \"Voltajes\",\n  is3D: true,\n  slices: [{color: 'black'}, {}, {}, {color: 'red'}]\n};\n\nfunction App() {\n  const [corrienteData, setCorrienteData] = React.useState([\n    [\n      \"Corrientes\",\n      \"voltaje\",\n      { role: \"style\" },\n    ]\n  ]);\n  const [dataTensiones, setDataTensiones] = React.useState([\n    [\"Tensiones\", \"valores\"],\n  ]);\n  const [dataEnergias, setDataEnergias] = React.useState([\n    [\"Resto del promedio de energias\", \"Energia_Activa\", \"Energia_Aparente\", \"Energia_Reactiva\"],\n  ]);\n  const [dataPotencias, setDataPotencias] = React.useState([\n    [\"Potencias\", \"Activa\", \"Aparente\", \"Reactiva\"],\n  ]);\n  const [dataPotenciaTotal, setDataPotenciaTotal] = React.useState([\n    [\"Valor\", \"Factor de potencia total\"],\n  ]);\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/data/all')\n    .then(res => {\n\n      // Variables\n      let Corriente_L1 = 0\n      let Corriente_L2 = 0\n      let Corriente_L3 = 0\n      let Tension_L1_N = 0\n      let Tension_L2_N = 0\n      let Tension_L3_N = 0\n      let Energia_Activa = 0\n      let Energia_Aparente = 0\n      let Energia_Reactiva = 0\n      let potencias = []\n      let potenciaTotal = []\n\n      // Ciclo For\n      for (let i = 0; i < res.data.length; i++) {\n        Corriente_L1 += res.data[i].Corriente_L1\n        Corriente_L2 += res.data[i].Corriente_L2\n        Corriente_L3 += res.data[i].Corriente_L3\n        Tension_L1_N += res.data[i].Tension_L1_N\n        Tension_L2_N += res.data[i].Tension_L2_N\n        Tension_L3_N += res.data[i].Tension_L3_N\n        Energia_Activa += res.data[i].Energia_Activa\n        Energia_Aparente += res.data[i].Energia_Aparente\n        Energia_Reactiva += res.data[i].Energia_Reactiva\n        if(i < 50) {\n          potencias.push([i, res.data[i].Potencia_Activa_Total_P, res.data[i].Potencia_Aparente_Total_S, res.data[i].Potencia_Reactiva_Total_Q])\n          potenciaTotal.push([i, res.data[i].Factor_de_Potencia_Total])\n        }\n      }\n\n      // Corrientes\n      Corriente_L1 = Corriente_L1 / res.data.length\n      Corriente_L2 = Corriente_L2 / res.data.length\n      Corriente_L3 = Corriente_L3 / res.data.length\n      setCorrienteData([...corrienteData, [\"Corriente_L1\", Corriente_L1, 'red'], [\"Corriente_L2\", Corriente_L2, 'black'], [\"Corriente_L3\", Corriente_L3, 'blue']])\n\n      // Tensiones\n      Tension_L1_N = Tension_L1_N / res.data.length\n      Tension_L2_N = Tension_L2_N / res.data.length\n      Tension_L3_N = Tension_L3_N / res.data.length\n      setDataTensiones([...dataTensiones, ['Tension_L1_N', Tension_L1_N], ['Tension_L2_N', Tension_L2_N], ['Tension_L3_N', Tension_L3_N]])\n\n      // Energias\n      Energia_Activa = Energia_Activa % res.data.length\n      Energia_Aparente = Energia_Aparente % res.data.length\n      Energia_Reactiva = Energia_Reactiva % res.data.length\n      setDataEnergias([...dataEnergias, [\"Energias\", Energia_Activa, Energia_Aparente, Energia_Reactiva]])\n\n      // Potencias\n      setDataPotencias([...dataPotencias, ...potencias])\n      setDataPotenciaTotal([...dataPotenciaTotal, ...potenciaTotal])\n    })\n  }, []);\n\n  return (\n    <div className=\"dashboards\">\n      <div className='dashBoard'>\n        <Chart\n          chartType=\"BarChart\"\n          data={corrienteData}\n          options={{\n            title: \"Voltajes\",\n          }}\n          width={\"100%\"}\n          height={\"250px\"}\n        />\n      </div>\n      <div className='dashBoard'>\n        <Chart\n          chartType=\"PieChart\"\n          data={dataTensiones}\n          options={{\n            title: \"Tensiones\",\n            is3D: true,\n            slices: [{color: 'black'}, {color: 'green'}, {color: 'violet'}]\n          }}\n          width={\"100%\"}\n          height={\"250px\"}\n          columns={[]}\n        />\n      </div>\n      <div className='dashBoard'>\n        <Chart\n          chartType=\"Bar\"\n          data={dataEnergias}\n          options={{\n            title: \"Energias\",\n            is3D: false,\n\n          }}\n          width={\"100%\"}\n          height={\"250px\"}\n          columns={[]}\n        />\n      </div>\n      <div className='dashBoard'>\n        <Chart\n          chartType=\"LineChart\"\n          data={dataPotencias}\n          options={{\n            title: \"Potencias\",\n            is3D: false,\n\n          }}\n          width={\"100%\"}\n          height={\"250px\"}\n          columns={[]}\n        />\n      </div>\n      <div className='dashboardLarge'>\n        <Chart\n          chartType=\"AreaChart\"\n          width=\"100%\"\n          height=\"400px\"\n          data={dataPotenciaTotal}\n          options={{\n            title: \"Factor de potencia total\",\n            hAxis: { title: \"EvoluciÃ³n de la potencia\", titleTextStyle: { color: \"#333\" } },\n            vAxis: { minValue: 0 },\n            chartArea: { height: \"50%\" },\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}